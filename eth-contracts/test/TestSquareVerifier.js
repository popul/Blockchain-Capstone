// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const SquareVerifier = artifacts.require("SquareVerifier");
const proof = require('./proof.json');
const proof2 = require('./proof2.json');

// // Test verification with correct proof
// // - use the contents from proof.json generated from zokrates steps

contract('SquareVerifier', async (accounts) => {
    it('verifyTx', async () => {
        const squareVerifier = await SquareVerifier.deployed();
        const result = await squareVerifier.verifyTx(proof.proof, proof.inputs);
        assert.equal(result, true, 'verification failed');

        const result2 = await squareVerifier.verifyTx(proof2.proof, proof2.inputs);
        assert.equal(result2, true, 'verification failed');
    });
    it('verifyTx should fails', async () => {
        const squareVerifier = await SquareVerifier.deployed();
        const result = await squareVerifier.verifyTx(proof.proof, [1, 5]);
        assert.equal(result, false, 'verification must fail');
    });
});
    
// Test verification with incorrect proof
